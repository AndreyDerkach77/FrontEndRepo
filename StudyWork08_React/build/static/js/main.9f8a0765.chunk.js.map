{"version":3,"sources":["App.js","index.js"],"names":["App","state","balanceBegin","balanceNow","stateMoney","stateExpense","headModalText","summaState","commState","idNow","closeModalForm","textAreaIsShow","expenses","showModal","textAreaShow","idExpense","setState","prevState","inputHandler","event","target","name","value","beginBalance","closeModal","balanceDebetCredit","summa","comm","Number","addExpense","expense","find","item","id","summTmp","summ","Date","getTime","deleteExpense","filter","el","editExpense","this","className","Button","color","variant","onClick","map","exp","key","type","autoComplete","onChange","placeholder","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f8a0765.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.scss\";\nimport Button from \"@material-ui/core/Button\";\n\n// function App() {[\n//   return <div className=\"App\">Functional Component</div>;\n// }\n\nclass App extends React.Component {\n    state = {\n        balanceBegin: 0,\n        balanceNow: 0,\n        stateMoney: \"begin\",\n        stateExpense: \"new\",\n        headModalText: \"Введите, пожалуйста, начальный баланс\",\n        summaState: 0,\n        commState: \"\",\n        idNow: 0,\n        closeModalForm: true,\n        textAreaIsShow: false,\n        expenses: [\n            // {\n            //     id: 1,\n            //     comm: 'Доход от дедушки из США',\n            //     summa: 100,\n            //     item: \"debet\",\n            // },\n        ],\n    }\n\n    showModal = (textAreaShow, headModalText, stateMoney, stateExpense, idExpense) => {\n        if (stateExpense === \"new\") {\n            this.setState({\n                summaState: 0,\n                commState: \"\",\n            })\n        }\n        this.setState({\n            stateMoney: stateMoney,\n            stateExpense: stateExpense,\n            headModalText: headModalText,\n            idNow: idExpense,\n            textAreaIsShow: textAreaShow,\n        })\n\n        this.setState((prevState) => {\n            return {closeModalForm: !prevState.closeModalForm}\n        });\n    }\n\n    inputHandler = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n            // summaState: event.target.value,\n        })\n    }\n\n    beginBalance = () => {\n        this.setState({\n            balanceBegin: this.state.summaState,\n            balanceNow: this.state.summaState,\n        })\n        this.closeModal()\n    }\n\n    balanceDebetCredit = () => {\n        let summa = this.state.summaState\n        let comm = this.state.commState\n        if ((this.state.stateMoney === \"credit\" && summa>0) || (this.state.stateMoney === \"debet\" && summa<0)) {\n            summa = summa * -1\n        }\n\n        if (this.state.stateExpense === \"new\") {\n            this.setState({\n                balanceNow: (Number(this.state.balanceNow) + Number(summa))\n            })\n            this.addExpense(summa, comm)\n        } else {\n            let expense = this.state.expenses.find(item => item.id === this.state.idNow);\n            let summTmp = Number(expense.summa)\n            expense.summa = Number(summa)\n            expense.comm = comm\n            this.setState({\n                balanceNow: (Number(this.state.balanceNow) - Number(summTmp) + Number(summa))\n            })\n        }\n        this.closeModal()\n    }\n\n    addExpense = (summ, comm) => {\n        this.setState({\n            expenses: [...this.state.expenses, {\n                id: new Date().getTime(),\n                comm: comm,\n                summa: summ,\n                item: this.state.stateMoney,\n            }],\n        })\n    }\n\n    deleteExpense = id => {\n        let expense = this.state.expenses.find(item => item.id === id);\n        this.setState({\n                balanceNow: Number(this.state.balanceNow) + (Number(expense.summa) * -1),\n                expenses: this.state.expenses.filter(el => (\n                    el.id !== id\n                ))\n            }\n        )\n    }\n\n    editExpense = id => {\n        let expense = this.state.expenses.find(item => item.id === id);\n        if (expense.item === \"credit\") {\n            this.setState({\n                summaState: Number(expense.summa) * -1\n            })\n        } else {\n            this.setState({\n                summaState: Number(expense.summa)\n            })\n        }\n        this.setState({\n            commState: expense.comm,\n        })\n        this.showModal(1, \"Отредактируйте доход/расход\", expense.item, \"edit\", expense.id)\n    }\n\n    closeModal = () => {\n        // this.setState((prevState) => {\n        //     return {closeModalForm: !prevState.closeModalForm}\n        // });\n\n        this.setState({\n            closeModalForm: true,\n        })\n    }\n\n\n    render() {\n        const {balanceBegin, balanceNow, expenses, headModalText, summaState, closeModalForm, commState, textAreaIsShow} = this.state\n        return (\n            <div className=\"App\">\n                <h1>Финансовый журнал</h1>\n                <p className=\"textBalanceBegin\">Начальный баланс = {balanceBegin}</p>\n                <Button className=\"btnBegin\" color='primary' variant='contained'\n                        onClick={() => this.showModal(false, \"Введите, пожалуйста, начальный баланс\", \"begin\")}>Задать\n                    баланс</Button>\n                <div className=\"btnsDebetKredit\">\n                    <Button className=\"btnDebet\" variant='contained'\n                            onClick={() => this.showModal(true, \"Введите, пожалуйста, доход и комментарий\", \"debet\", \"new\")}>Ввести\n                        доход</Button>\n                    <Button className=\"btnKredit\" color='secondary' variant='contained'\n                            onClick={() => this.showModal(true, \"Введите, пожалуйста, расход и комментарий\", \"credit\", \"new\")}>Ввести\n                        расход</Button>\n                </div>\n                <p className=\"textBalanceNow\">Текущий баланс = {balanceNow}</p>\n\n                <div className=\"expenses\">\n                    {expenses.map(exp => (\n                        <div className={`exp${exp.item === \"debet\" ? \" debet\" : \" credit\"}`}\n                             key={exp.id}>\n                            <p className=\"comm\">{exp.comm}</p>\n                            <p className=\"summa\">{exp.summa}</p>\n                            <Button color='primary'\n                                    variant='contained'\n                                    onClick={() => this.editExpense(exp.id)}\n                            >Edit</Button>\n                            <Button color='secondary'\n                                    variant='contained'\n                                    onClick={() => this.deleteExpense(exp.id)}\n                            >Delete</Button>\n                        </div>\n                    ))}\n                </div>\n\n                <div className={`overlay-container${closeModalForm ? \" hide\" : \" show\"}`}>\n                    <div className={`window-container${closeModalForm ? \"\" : \" window-container-visible\"}`}>\n                        <h3 className=\"headModal\">\n                            {headModalText}\n                        </h3>\n                        <div className=\"textsModal\">\n                            <input className=\"inpBalance\" type=\"number\" name=\"summaState\" id=\"beginBalance\"\n                                   autoComplete=\"off\"\n                                   value={summaState}\n                                   onChange={this.inputHandler}/>\n                            <textarea className={`commentArea${textAreaIsShow ? \" show\" : \" hide\"}`}\n                                      name=\"commState\"\n                                      id=\"comment\"\n                                      placeholder=\"Comment\"\n                                      value={commState}\n                                      onChange={this.inputHandler}\n                            />\n                        </div>\n                        <div className=\"modal__btns\">\n                            <Button className={`okBegin${textAreaIsShow ? \" hide\" : \" show\"}`}\n                                    color='primary' variant='contained'\n                                    onClick={() => this.beginBalance()}>Подтвердить</Button>\n                            <Button className={`okDebetCredit${textAreaIsShow ? \" show\" : \" hide\"}`}\n                                    color='primary' variant='contained'\n                                    onClick={() => this.balanceDebetCredit()}>Подтвердить</Button>\n                            <Button className=\"close\" color='secondary' variant='contained'\n                                    onClick={() => this.closeModal()}>Отмена</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}